from '100-matrix_mul' module
----------------------------
using 'matrix_mul' function
::
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

    >>> matrix_mul([[1, 2, 3], [4, 5, 6]], [[7, 8], [9, 10], [11, 12]])
    [[58, 64], [139, 154]]
    >>> matrix_mul([[1, 2, 3]], [[4], [5], [6]])
    [[32]]
    >>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, 8]])
    [[19, 22], [43, 50]]
    >>> matrix_mul([[1, 2], [3, 'a']], [[4, 5], [6, 7]])
    Traceback (most recent call last):
        ...
    TypeError: m_a should contain only integers or floats
    >>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7, None]])
    Traceback (most recent call last):
        ...
    TypeError: m_b should contain only integers or floats
    >>> matrix_mul([[1, 2], [3, 4, 5]], [[6, 7], [8, 9]])
    Traceback (most recent call last):
        ...
    TypeError: Each row of m_a must be of the same size
    >>> matrix_mul([[1, 2], [3, 4]], [[5, 6], [7]])
    Traceback (most recent call last):
        ...
    TypeError: Each row of m_b must be of the same size
    >>> matrix_mul("not a list", [[1, 2], [3, 4]])
    Traceback (most recent call last):
    ...
    TypeError: m_a must be a list
    >>> matrix_mul([[1, 2], [3, 4]], 123)
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list
    >>> matrix_mul([[1, 2], "not a list"], [[3, 4], [5, 6]])
    Traceback (most recent call last):
        ...
    TypeError: m_a must be a list of lists
    >>> matrix_mul([[1, 2], [3, 4]], [[5, 6], 123])
    Traceback (most recent call last):
        ...
    TypeError: m_b must be a list of lists
    >>> matrix_mul([], [[1, 2], [3, 4]])
    Traceback (most recent call last):
        ...
    ValueError: m_a can't be empty
    >>> matrix_mul([[1, 2], [3, 4]], [])
    Traceback (most recent call last):
        ...
    ValueError: m_b can't be empty
