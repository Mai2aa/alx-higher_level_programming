from ''7-base_geometry'' module
-------------------------------
using ''BaseGeometry'' function
::

    >>> BaseGeometry = __import__('7-base_geometry').BaseGeometry

    >>> bg = BaseGeometry()
    >>> bg.integer_validator("name", "5")
    Traceback (most recent call last):
    TypeError: name must be an integer
    >>> bg.integer_validator("name", True)
    Traceback (most recent call last):
    TypeError: name must be an integer
    >>> bg.integer_validator("name", -5)
    Traceback (most recent call last):
    ValueError: name must be greater than 0
    >>> bg.integer_validator("name", 0)
    Traceback (most recent call last):
    ValueError: name must be greater than 0
    >>> bg.integer_validator("name", 5)
    >>> bg.integer_validator("name")
    Traceback (most recent call last):
    TypeError: BaseGeometry.integer_validator() missing 1 required positional argument: 'value'
    >>> bg.integer_validator()
    Traceback (most recent call last):
    TypeError: BaseGeometry.integer_validator() missing 2 required positional arguments: 'name' and 'value'
    >>> bg.integer_validator("name", 1, 2)
    Traceback (most recent call last):
    TypeError: BaseGeometry.integer_validator() takes 3 positional arguments but 4 were given
    >>> bg.integer_validator("age", (4,))
    Traceback (most recent call last):
    TypeError: age must be an integer
    >>> bg.integer_validator("age", [3])
    Traceback (most recent call last):
    TypeError: age must be an integer
    >>> bg.integer_validator("age", {3, 4})
    Traceback (most recent call last):
    TypeError: age must be an integer
    >>> bg.integer_validator("age", None)
    Traceback (most recent call last):
    TypeError: age must be an integer